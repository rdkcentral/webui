<?%
/*
 If not stated otherwise in this file or this component's Licenses.txt file the
 following copyright and licenses apply:
 Copyright 2016 RDK Management
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
?>
<?% include('includes/actionHandlerUtility.jst') ?>
<?% include('includes/jwt.jst') ?>
<?%
session_start();
if (!isset($_SESSION["loginuser"])) {
	echo( '<script type="text/javascript">alert("Please Login First!"); location.href="../index.jst";</script>');
	exit(0);
}
$jsConfig = $_POST['configInfo'];
// $jsConfig = '{"radio_enable":"true", "network_name":"ssid1", "wireless_mode":"b,g,n", "security":"WPA2_PSK_AES", "channel_automatic":"false", "channel_number":"6", "network_password":"123456789", "broadcastSSID":"true", "ssid_number":"1"}';
$arConfig = json_decode($jsConfig, true);
//print_r($arConfig);
$thisUser = $arConfig['thisUser'];
/*********************************************************************************************/
$i = $arConfig['ssid_number'];
$partnerId = getStr("Device.DeviceInfo.X_RDKCENTRAL-COM_Syndication.PartnerId");
$Mesh_Enable 	= getStr("Device.DeviceInfo.X_RDKCENTRAL-COM_xOpsDeviceMgmt.Mesh.Enable");
$Mesh_State 	= getStr("Device.DeviceInfo.X_RDKCENTRAL-COM_xOpsDeviceMgmt.Mesh.State");
$Mesh_Mode = ($Mesh_Enable == 'true' && $Mesh_State == 'Full')? true : false;
$OperatingChannelBandwidth ="";
$RadioNumberOfEntries = getStr("Device.WiFi.RadioNumberOfEntries");
if($RadioNumberOfEntries)
{
	for($r=1; $r <= $RadioNumberOfEntries ; $r++)
	{
		$OperatingChannelBandwidth = getStr("Device.WiFi.Radio."+$r+".OperatingFrequencyBand");
		if($OperatingChannelBandwidth == "6GHz")
			break;
	}
}
if(($OperatingChannelBandwidth == "6GHz") && ($i == 17))
{
	$r=3;        
        $network_pass = getStr("Device.WiFi.AccessPoint."+$i+".Security.X_COMCAST-COM_KeyPassphrase");
}
else
{
	$r = (2 - intval($i)%2);	//1,3,5,7 == 1(2.4G); 2,4,6,8 == 2(5G);
        $network_pass = getStr("Device.WiFi.AccessPoint."+$i+".Security.X_COMCAST-COM_KeyPassphrase");
}
$frequency_band = getStr("Device.WiFi.Radio."+$r+".OperatingFrequencyBand");
$radio_band	= (strstr($frequency_band,"5G")) ? "5" : (strstr($frequency_band,"6G")) ? "6" : "2.4";
$Radio_1_Support_Modes = getStr("Device.WiFi.Radio.1.SupportedStandards");
$Radio_2_Support_Modes = getStr("Device.WiFi.Radio.2.SupportedStandards");
if($radio_band == "6") $Radio_3_Support_Modes = getStr("Device.WiFi.Radio.3.SupportedStandards");

$get_ssid_enable 	= getStr("Device.WiFi.SSID."+$i+".Enable");
$get_ssid_name        = getStr("Device.WiFi.SSID."+$i+".SSID");
$get_channel_automatic 	= getStr("Device.WiFi.Radio."+$i+".AutoChannelEnable");
$get_channel 		= getStr("Device.WiFi.Radio."+$i+".Channel");
$get_wireless_mode 	= getStr("Device.WiFi.Radio."+$i+".OperatingStandards");
$get_channel_bandwidth 	= getStr("Device.WiFi.Radio."+$i+".OperatingChannelBandwidth");
$get_encrypt_mode	= getStr("Device.WiFi.AccessPoint."+$i+".Security.ModeEnabled");
$get_encrypt_method	= getStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_EncryptionMethod");
$WifiPersonalizationEnable = getStr("Device.DeviceInfo.X_RDKCENTRAL-COM_WiFiNeedsPersonalization");

// security_mode from $encrypt_mode & $encrypt_method
function security_mode($encrypt_mode, $encrypt_method) {
	$security = "None";
	if ("WEP-64" == $encrypt_mode){
		$security = "WEP_64";
	}
	else if ("WEP-128" == $encrypt_mode){
		$security = "WEP_128";
	}
	else if ("WPA-Personal" == $encrypt_mode){
		if ("TKIP" == $encrypt_method){
			$security = "WPA_PSK_TKIP";
		}
		else {
			$security = "WPA_PSK_AES";
		}
	}
	else if ("WPA2-Personal" == $encrypt_mode){
		if ("TKIP" == $encrypt_method){
			$security = "WPA2_PSK_TKIP";
		}
		else if ("AES" == $encrypt_method){
			$security = "WPA2_PSK_AES";
		}
		else {
			$security = "WPA2_PSK_TKIPAES";
		}
	}
	else if ("WPA-WPA2-Personal" == $encrypt_mode){
		$security = "WPAWPA2_PSK_TKIPAES";
	}
	else if ("WPA3-Personal" == $encrypt_mode){
		if ("AES" == $encrypt_method)
			$security = "WPA3-Personal Only";
	}
	else if ("WPA3-Personal-Transition" == $encrypt_mode){
		if ("AES" == $encrypt_method)
			$security = "WPA3-Personal Transition";
	}
        else if ("WPA3-Personal-Compatibility" == $encrypt_mode){
                if ("AES" == $encrypt_method)
                        $security = "WPA3-Personal Compatibility";
        }
	else {
		$security = "None";
	}
	return $security;
}

if($i != 1 && $i != 2 && $i != 17) $Mesh_Mode = false;
$response_message = '';
//ssid 1,2 for all
//ssid 3,4 for mso only
if ($i == 1 || $i == 2 || $i == 17) {
	// check if the LowerLayers radio is enabled. if disable, no need to configure following
	if ("true" == getStr("Device.WiFi.Radio."+$r+".Enable")) {
		//change SSID status first, if disable, no need to configure following
		if($get_ssid_enable != $arConfig['radio_enable']) {
			if($arConfig['radio_enable'] == "true"){
				$logstr = " : webui_event:wifissid_enable" + " for radio " + $r;
				LogStr($logstr);
			} else {
				$logstr = " : webui_event:wifissid_disable" + " for radio " + $r;
				LogStr($logstr);
			}
		}
		setStr("Device.WiFi.SSID."+$i+".Enable", $arConfig['radio_enable'], true);
		if ("true" == $arConfig['radio_enable'] && (!$Mesh_Mode) )
		{
			$validation = true;
			if(($arConfig['password_update']=="false") && ("mso" == $thisUser)){
				$arConfig['network_password']=$network_pass;
			}
                        if($network_pass != $arConfig['network_password']){
				$logstr = " : webui_event:wifinetworkpassword changed" + " for radio " + $r;
				LogStr($logstr);
                        }
			if ("mso" != $thisUser){
				if($validation) $validation = isValInArray($arConfig['channel_bandwidth'], ['20MHz', '40MHz', '80MHz', '160MHz', '320MHz']/*p2j-array*/);
                                if($OperatingChannelBandwidth == "6GHz" && $i==17){
					if (strstr($Radio_3_Support_Modes, "ax"))
					{
						if($validation) $validation = ($radio_band=="6" && isValInArray($arConfig['wireless_mode'], ["ax", "be", "a,n,ac,ax", "ax,be"]));
					}
                                }else
                                {
                                	if (strstr($Radio_1_Support_Modes, "ax") && strstr($Radio_2_Support_Modes, "ax"))
					{
						if($validation) $validation = (($radio_band=="2.4" && isValInArray($arConfig['wireless_mode'], ["g,n", "g,n,ax", "g,n,ax,be"])) || ($radio_band=="5" && isValInArray($arConfig['wireless_mode'], ["a,n", "a,n,ac", "a,n,ac,ax", "a,n,ac,ax,be"])));
					}
					else
					{
						if($validation) $validation = (($radio_band=="2.4" && isValInArray($arConfig['wireless_mode'], ["n", "g,n", "b,g,n"])) || ($radio_band=="5" && isValInArray($arConfig['wireless_mode'], ["n", "a,n", "ac", "n,ac", "a,n,ac"])));
					}
                                }
				if ("false"==$arConfig['channel_automatic']){
					$PossibleChannels = getStr("Device.WiFi.Radio."+$r+".PossibleChannels");
					if(strpos($PossibleChannels, '-') !== false){//1-11
						$PossibleChannelsRange = explode('-', $PossibleChannels);
						$PossibleChannelsArr = range($PossibleChannelsRange[0],$PossibleChannelsRange[1]);
						for($key in $PossibleChannelsArr) { $val=$PossibleChannelsArr[$key];/*p2j-foreach*/$PossibleChannelsArr[$key] = String($val);}
					}
					else {//36,40,44,48,149,153,157,161,165 or 1,2,3,4,5,6,7,8,9,10,11
						$PossibleChannelsArr = explode(',', $PossibleChannels);
					}
					if ($validation && "false"==$arConfig['channel_automatic']) $validation = isValInArray($arConfig['channel_number'], $PossibleChannelsArr);
				}
			}
			if($arConfig['security']!="None"){
					if($validation) $validation = (preg_match("/^[ -~]{8,63}$|^[a-fA-F0-9]{64}$/i", $arConfig['network_password'])==1);
			}
			if($validation && !valid_ssid_name($arConfig['network_name']))
			{
				$validation = false;
				$response_message = 'WiFi name is not valid. Please enter a new name !';
			}

			if ($WifiPersonalizationEnable === "true") {
				if (strpos($partnerId, "sky-") === false) {
					//Choose a different Network Name (SSID) than the one provided on your gateway
					$DefaultSSID = getStr("Device.WiFi.SSID."+$i+".X_COMCAST-COM_DefaultSSID");
					if($validation && (strtolower($DefaultSSID) == strtolower($arConfig['network_name']))){
						$validation = false;
						$response_message = 'WiFi name is not valid. Please enter a new name !';
					}
					//Choose a different Network Password than the one provided on your gateway
					$DefaultKeyPassphrase = getStr("Device.WiFi.AccessPoint."+$i+".Security.X_COMCAST-COM_DefaultKeyPassphrase");
					if($validation && ($DefaultKeyPassphrase == $arConfig['network_password']) && ($arConfig['security']!="None")) {
						$validation = false;
						$response_message = 'Please change Network Password !';
					}
				}
			}

			if($validation){
				switch ($arConfig['security'])
				{
					case "WPA2_PSK_TKIP":
					  $encrypt_mode   = "WPA2-Personal";
					  $encrypt_method = "TKIP";
					  break;
					case "WPA2_PSK_AES":
					  $encrypt_mode   = "WPA2-Personal";
					  $encrypt_method = "AES";
					  break;
					case "WPA3-Personal Only":
					  $encrypt_mode   = "WPA3-Personal";
					  $encrypt_method = "AES";
					  break;
					case "WPA2_PSK_TKIPAES":
					  $encrypt_mode   = "WPA2-Personal";
					  $encrypt_method = "AES+TKIP";
					  break;
					case "WPAWPA2_PSK_TKIPAES":
					  $encrypt_mode   = "WPA-WPA2-Personal";
					  $encrypt_method = "AES+TKIP";
					  break;
					case "WPA3-Personal Transition":
                                          $encrypt_mode   = "WPA3-Personal-Transition";
                                          $encrypt_method = "AES";
                                          break;
                                        case "WPA3-Personal Compatibility":
                                          $encrypt_mode   = "WPA3-Personal-Compatibility";
                                          $encrypt_method = "AES";
                                          break;
					case "None":
					  $encrypt_mode   = "None";
					  $encrypt_method = "None";
					  break;
					default:
					  $encrypt_mode   = "WPA2-Personal";
					  $encrypt_method = "AES";
				}
				// User "mso" have another page to configure this
				$channel = getStr("Device.WiFi.Radio."+$r+".AutoChannelEnable");
				if ("mso" != $thisUser){
					if($get_channel_bandwidth != $arConfig['channel_bandwidth']) {
						$logstr = " : webui_event:wifichannelbandwidth:" + $arConfig['channel_bandwidth'] + " for radio " + $r;
						LogStr($logstr);
					}
					setStr("Device.WiFi.Radio."+$r+".OperatingChannelBandwidth", $arConfig['channel_bandwidth'], false);
					if($get_wireless_mode != $arConfig['wireless_mode']) {
						$logstr = " : webui_event:wifiwirelessmode:" + $arConfig['wireless_mode'] + " for radio " + $r;
						LogStr($logstr);
					}
					setStr("Device.WiFi.Radio."+$r+".OperatingStandards", $arConfig['wireless_mode'], true);
					setStr("Device.WiFi.Radio."+$r+".AutoChannelEnable", $arConfig['channel_automatic'], true);
						if ("false"==$arConfig['channel_automatic']){
							setStr("Device.WiFi.Radio."+$r+".Channel", $arConfig['channel_number'], true);
							if($get_channel_automatic != $arConfig['channel_automatic']) {
								$logstr = " : webui_event:wifichannel_manual" + " for radio " + $r;
								LogStr($logstr);
							}
						}
						else {
							if($get_channel_automatic != $arConfig['channel_automatic']) {
								$logstr = " : webui_event:wifichannel_auto" + " for radio " + $r;
								LogStr($logstr);
							}
						}
						if($get_channel != $arConfig['channel_number']) {
							$logstr = " : webui_event:wifichannelnumber:" + $arConfig['channel_number'];
							LogStr($logstr);
						}
                                                if($arConfig['channel_automatic'] != $channel){
                                                    $fh = fopen("/rdklogs/logs/Consolelog.txt.0","a");
                                                    $data = ($arConfig['channel_automatic'] == 'true') ? "Channel is set to Auto from " +$thisUser+ " for radio " +$r+ "\n" : "channel is set to Manual from "+ $thisUser + " for radio " +$r+ " and Channel selected is " +$arConfig['channel_number']+ "\n";
                                                    fwrite($fh,$data);
                                                    fclose($fh);
                                                 }

				}
				if ("None" == $arConfig['security']) {
					setStr("Device.WiFi.AccessPoint."+$i+".Security.ModeEnabled", $encrypt_mode, true);
				}
				else if ("WEP_64" == $arConfig['security']) {
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey64Bit.1.WEPKey",  $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey64Bit.2.WEPKey",  $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey64Bit.3.WEPKey",  $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey64Bit.4.WEPKey",  $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.ModeEnabled", $encrypt_mode, true);
				}
				else if("WEP_128" == $arConfig['security']) {
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey128Bit.1.WEPKey", $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey128Bit.2.WEPKey", $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey128Bit.3.WEPKey", $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_WEPKey128Bit.4.WEPKey", $arConfig['network_password'], false);
					setStr("Device.WiFi.AccessPoint."+$i+".Security.ModeEnabled", $encrypt_mode, true);
				}
				else {	//no open, no wep
					//bCommit false->true still do validation each, have to group set this...
					DmExtSetStrsWithRootObj("Device.WiFi.", true, [
						["Device.WiFi.AccessPoint."+$i+".Security.ModeEnabled", "string", $encrypt_mode],
						["Device.WiFi.AccessPoint."+$i+".Security.X_CISCO_COM_EncryptionMethod", "string", $encrypt_method]]/*p2j-array*/);
                                                if ($i == 17)
							setStr("Device.WiFi.AccessPoint."+$i+".Security.X_COMCAST-COM_KeyPassphrase", $arConfig['network_password'], true);
                                                else
                                                	setStr("Device.WiFi.AccessPoint."+$i+".Security.X_COMCAST-COM_KeyPassphrase", $arConfig['network_password'], true);
				}
				if($get_ssid_name != $arConfig['network_name']){
					$logstr = " : webui_event:wifinetworkname changed" + " for radio " + $r;
					LogStr($logstr);
				}
				setStr("Device.WiFi.SSID."+$i+".SSID", $arConfig['network_name'], true);
				setStr("Device.WiFi.AccessPoint."+$i+".SSIDAdvertisementEnabled", $arConfig['broadcastSSID'], true);
				$get_security_mode = security_mode($get_encrypt_mode, $get_encrypt_method);
				if($get_security_mode != $arConfig['security']) {
					$logstr = " : webui_event:wifisecuritymode:" + $arConfig['security'] + " for radio " + $r;
					LogStr($logstr);
				}
				if ("mso" == $thisUser){
					// if ("false" == $arConfig['enableWMM']){
						// setStr("Device.WiFi.AccessPoint."+$i+".UAPSDEnable", "false", true);
					// }
					// setStr("Device.WiFi.AccessPoint."+$i+".WMMEnable", $arConfig['enableWMM'], true);
					//when disable WMM, make sure UAPSD is disabled as well, have to use group set
					if (getStr("Device.WiFi.AccessPoint."+$i+".WMMEnable") != $arConfig['enableWMM']) {
						DmExtSetStrsWithRootObj("Device.WiFi.", true, [
							["Device.WiFi.AccessPoint."+$i+".UAPSDEnable", "bool", "false"],
							["Device.WiFi.AccessPoint."+$i+".WMMEnable",   "bool", $arConfig['enableWMM']]]/*p2j-array*/);
					}
				}
			}
		}
		// setStr("Device.WiFi.Radio."+$r+".X_CISCO_COM_ApplySetting", "true", true);
		setStr("Device.WiFi.ApplyAccessPointSettings", "true", true);
                setStr("Device.WiFi.ApplyRadioSettings","true",true);
	}
}
if($response_message=='') {
        $response_message = 'success';
}
sleep(1);
echo( htmlspecialchars(json_encode($response_message), ENT_NOQUOTES, 'UTF-8'));
?>
